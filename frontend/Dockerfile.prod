# =============================================================================
# OPSCONDUCTOR FRONTEND - PRODUCTION BUILD
# =============================================================================
# Multi-stage build: Build React app + Serve with optimized nginx

# Build stage
FROM node:18-alpine AS build

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies (production only)
RUN npm ci --only=production --silent

# Copy source code
COPY . .

# Build the application with production optimizations
ENV NODE_ENV=production
ENV GENERATE_SOURCEMAP=false
ENV INLINE_RUNTIME_CHUNK=false

# Set API URLs to relative paths (no hardcoded IPs)
ENV REACT_APP_API_URL=/api/v1
ENV REACT_APP_AUTH_URL=/api/v1/auth
ENV REACT_APP_USER_URL=/api/v1/users
ENV REACT_APP_WS_URL=/ws
ENV REACT_APP_STORAGE_URL=/storage

RUN npm run build

# Production stage
FROM nginx:alpine AS production

# Install curl for health checks
RUN apk add --no-cache curl

# Remove default nginx website
RUN rm -rf /usr/share/nginx/html/*

# Copy built app from build stage
COPY --from=build /app/build /usr/share/nginx/html

# Copy custom nginx configuration optimized for React SPA
COPY nginx-spa.conf /etc/nginx/conf.d/default.conf

# Create nginx user for better security
RUN addgroup -g 101 nginx && \
    adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx

# Set permissions
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d

# Switch to non-root user
USER nginx

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3000/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]