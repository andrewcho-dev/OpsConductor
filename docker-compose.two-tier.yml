# =============================================================================
# OPSCONDUCTOR - TWO-TIER GATEWAY ARCHITECTURE
# =============================================================================
# Optional: External HTTPS Gateway + Internal API Gateway
# Use with: docker-compose -f docker-compose.yml -f docker-compose.two-tier.yml up

version: '3.8'

services:
  # =============================================================================
  # EXTERNAL NGINX GATEWAY - HTTPS, Static Files, Public Security
  # =============================================================================
  nginx:
    image: nginx:alpine
    container_name: opsconductor-external-gateway
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx-production.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/proxy_params:/etc/nginx/proxy_params:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - frontend-build:/usr/share/nginx/html:ro
    networks:
      - opsconductor-network
    depends_on:
      - api-gateway  # Route API traffic to internal gateway
      frontend-builder:
        condition: service_completed_successfully
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - NGINX_WORKER_PROCESSES=auto
      - NGINX_WORKER_CONNECTIONS=2048

  # =============================================================================
  # INTERNAL API GATEWAY - Service Mesh, Internal Routing
  # =============================================================================
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: opsconductor-internal-gateway
    volumes:
      - ./services/api-gateway/nginx-optimized.conf:/etc/nginx/nginx.conf:ro
      - ./services/api-gateway/internal_proxy_params:/etc/nginx/internal_proxy_params:ro
    networks:
      - opsconductor-network
    depends_on:
      auth-service:
        condition: service_healthy
      user-service:
        condition: service_healthy
      targets-service:
        condition: service_healthy
      jobs-service:
        condition: service_healthy
      execution-service:
        condition: service_healthy
      audit-events-service:
        condition: service_healthy
      notification-service:
        condition: service_healthy
      target-discovery-service:
        condition: service_healthy
      job-scheduling-service:
        condition: service_healthy
      job-management-service:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - NGINX_WORKER_PROCESSES=2
      - NGINX_WORKER_CONNECTIONS=1024

  # =============================================================================
  # FRONTEND BUILDER - Build React app to static files
  # =============================================================================
  frontend-builder:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      target: build
    container_name: opsconductor-frontend-builder
    volumes:
      - frontend-build:/app/build
    environment:
      - NODE_ENV=production
      - GENERATE_SOURCEMAP=false
      - REACT_APP_API_URL=/api/v1
      - REACT_APP_AUTH_URL=/api/v1/auth
      - REACT_APP_USER_URL=/api/v1/users
      - REACT_APP_WS_URL=/ws
      - REACT_APP_STORAGE_URL=/storage

  # =============================================================================
  # MICROSERVICES - NO DIRECT PORT EXPOSURE
  # =============================================================================
  auth-service:
    ports: []  # Access only through internal API gateway
    
  user-service:
    ports: []  # Access only through internal API gateway
    
  targets-service:
    ports: []  # Access only through internal API gateway
    
  jobs-service:
    ports: []  # Access only through internal API gateway
    
  execution-service:
    ports: []  # Access only through internal API gateway
    
  audit-events-service:
    ports: []  # Access only through internal API gateway
    
  notification-service:
    ports: []  # Access only through internal API gateway
    
  target-discovery-service:
    ports: []  # Access only through internal API gateway
    
  job-scheduling-service:
    ports: []  # Access only through internal API gateway
    
  job-management-service:
    ports: []  # Access only through internal API gateway

  # =============================================================================
  # MINIO - PRODUCTION CONFIGURATION
  # =============================================================================
  minio:
    ports: []  # Access only through nginx gateway
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-opsconductor}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-opsconductor_minio_2024}
      - MINIO_BROWSER_REDIRECT_URL=https://${EXTERNAL_DOMAIN:-localhost}/storage/console
      - MINIO_SERVER_URL=https://${EXTERNAL_DOMAIN:-localhost}/storage

  # =============================================================================
  # DISABLE LEGACY SERVICES
  # =============================================================================
  backend:
    profiles:
      - disabled  # Disable legacy monolithic backend

  frontend:
    profiles:
      - disabled  # Disable development frontend

  celery-worker:
    profiles:
      - disabled  # Disable legacy celery worker

  scheduler:
    profiles:
      - disabled  # Disable legacy scheduler

volumes:
  frontend-build:
    driver: local

networks:
  opsconductor-network:
    external: false