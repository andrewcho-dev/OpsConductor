# CENTRALIZED LOGGING ARCHITECTURE EXAMPLE
# This shows how logs flow from all services to central aggregator

services:
  # =============================================================================
  # CENTRALIZED LOGGING STACK
  # =============================================================================
  
  # Log Aggregator & Storage
  loki:
    image: grafana/loki:2.9.0
    container_name: opsconductor-loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
      - ./logging/loki-config.yaml:/etc/loki/local-config.yaml
    networks:
      - opsconductor-network

  # Log Collector (runs on each service)
  promtail:
    image: grafana/promtail:2.9.0
    container_name: opsconductor-promtail
    volumes:
      # Collect logs from ALL containers
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/log:/var/log:ro
      # Collect application logs
      - ./logs:/app/logs:ro
      - ./auth-service/logs:/auth-logs:ro
      # Configuration
      - ./logging/promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - opsconductor-network

  # Enhanced Grafana (for log visualization)
  grafana:
    image: grafana/grafana:latest
    container_name: opsconductor-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
      # Add Loki as datasource
      - ./logging/grafana-loki-datasource.yml:/etc/grafana/provisioning/datasources/loki.yml
    depends_on:
      - loki
      - prometheus
    networks:
      - opsconductor-network

  # =============================================================================
  # YOUR EXISTING SERVICES (with logging configured)
  # =============================================================================
  
  auth-service:
    # ... existing config ...
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=auth-service,environment=production"
    # Local logs still exist in container
    volumes:
      - ./auth-service/logs:/app/logs

  backend:
    # ... existing config ...
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=backend,environment=production"
    # Local logs still exist in container
    volumes:
      - ./logs:/app/logs

volumes:
  loki_data:
  grafana_data:
  prometheus_data:

networks:
  opsconductor-network:
    driver: bridge