# LOKI IMPLEMENTATION FOR OPSCONDUCTOR
# Extends existing Prometheus/Grafana setup with centralized logging

# =============================================================================
# ADD THESE SERVICES TO YOUR EXISTING docker-compose.yml
# =============================================================================

services:
  # =============================================================================
  # LOGGING - Loki (Log Aggregation & Storage)
  # =============================================================================
  loki:
    image: grafana/loki:2.9.0
    container_name: opsconductor-loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
      - ./logging/loki-config.yaml:/etc/loki/local-config.yaml
    networks:
      - opsconductor-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # LOGGING - Promtail (Log Collection from ALL containers)
  # =============================================================================
  promtail:
    image: grafana/promtail:2.9.0
    container_name: opsconductor-promtail
    volumes:
      # Collect Docker container logs
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Collect application logs
      - ./logs:/var/log/opsconductor:ro
      - ./auth-service/logs:/var/log/auth-service:ro
      # Collect system logs
      - /var/log:/var/log/host:ro
      # Configuration
      - ./logging/promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - opsconductor-network
    depends_on:
      - loki
    restart: unless-stopped

  # =============================================================================
  # ENHANCED SERVICES (Add logging labels to existing services)
  # =============================================================================
  
  # Your existing services get enhanced with logging labels
  auth-service:
    # ... all your existing config stays the same ...
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "logging.service=auth-service"
      - "logging.type=microservice"
      - "logging.environment=production"

  backend:
    # ... all your existing config stays the same ...
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "logging.service=backend"
      - "logging.type=microservice"
      - "logging.environment=production"

  frontend:
    # ... all your existing config stays the same ...
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "logging.service=frontend"
      - "logging.type=microservice"
      - "logging.environment=production"

  postgres:
    # ... existing config ...
    labels:
      - "logging.service=postgres"
      - "logging.type=database"

  redis:
    # ... existing config ...
    labels:
      - "logging.service=redis"
      - "logging.type=cache"

  nginx:
    # ... existing config ...
    labels:
      - "logging.service=nginx"
      - "logging.type=proxy"

# =============================================================================
# ADD THESE VOLUMES
# =============================================================================
volumes:
  loki_data:
  # ... your existing volumes stay the same ...

# =============================================================================
# WHAT THIS CREATES
# =============================================================================

# COMPLETE MONITORING & LOGGING STACK:
# 
# ┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐
# │   PROMETHEUS    │    │      LOKI       │    │    GRAFANA      │
# │                 │    │                 │    │                 │
# │ • Metrics       │    │ • Logs          │    │ • Dashboards    │
# │ • Performance   │    │ • Events        │    │ • Alerts        │
# │ • Health        │    │ • Errors        │    │ • Visualization │
# └─────────────────┘    └─────────────────┘    └─────────────────┘
#          ▲                       ▲                       ▲
#          │                       │                       │
#          │                       │                       │
# ┌─────────────────────────────────────────────────────────────────┐
# │                    ALL YOUR SERVICES                            │
# │                                                                 │
# │  Auth-Service  │  Backend  │  Frontend  │  Postgres  │  Redis  │
# │                                                                 │
# │  • Send metrics to Prometheus                                   │
# │  • Send logs to Loki via Promtail                              │
# │  • View everything in Grafana                                  │
# └─────────────────────────────────────────────────────────────────┘